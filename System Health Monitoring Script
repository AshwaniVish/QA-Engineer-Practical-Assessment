import psutil
import logging
from datetime import datetime

# Configure logging
logging.basicConfig(filename='system_health.log', level=logging.INFO,
                    format='%(asctime)s - %(levelname)s - %(message)s')

# Thresholds
CPU_THRESHOLD = 80.0  # in percentage
MEMORY_THRESHOLD = 80.0  # in percentage
DISK_THRESHOLD = 80.0  # in percentage

def log_and_alert(message):
    """Log the message and print an alert to the console."""
    logging.info(message)
    print(f"ALERT: {message}")

def check_cpu_usage():
    """Check the CPU usage."""
    cpu_usage = psutil.cpu_percent(interval=1)
    if cpu_usage > CPU_THRESHOLD:
        log_and_alert(f"High CPU usage detected: {cpu_usage}%")
    else:
        logging.info(f"CPU usage: {cpu_usage}%")

def check_memory_usage():
    """Check the memory usage."""
    memory_info = psutil.virtual_memory()
    memory_usage = memory_info.percent
    if memory_usage > MEMORY_THRESHOLD:
        log_and_alert(f"High memory usage detected: {memory_usage}%")
    else:
        logging.info(f"Memory usage: {memory_usage}%")

def check_disk_usage():
    """Check the disk usage."""
    disk_info = psutil.disk_usage('/')
    disk_usage = disk_info.percent
    if disk_usage > DISK_THRESHOLD:
        log_and_alert(f"High disk usage detected: {disk_usage}%")
    else:
        logging.info(f"Disk usage: {disk_usage}%")

def check_running_processes():
    """Check the running processes."""
    process_count = len(psutil.pids())
    logging.info(f"Running processes: {process_count}")

def main():
    """Main function to check system health."""
    logging.info("Starting system health check...")
    check_cpu_usage()
    check_memory_usage()
    check_disk_usage()
    check_running_processes()
    logging.info("System health check completed.")

if __name__ == '__main__':
    main()
